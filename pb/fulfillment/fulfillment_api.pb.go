// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.9
// source: mikebway/fulfillment/fulfillment_api.proto

package fulfillment

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Request parameters for the GetTaskByID API
type GetTaskByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// REQUIRED. The UUID ID of the task to be retrieved
	TaskId string `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
}

func (x *GetTaskByIDRequest) Reset() {
	*x = GetTaskByIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mikebway_fulfillment_fulfillment_api_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTaskByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTaskByIDRequest) ProtoMessage() {}

func (x *GetTaskByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mikebway_fulfillment_fulfillment_api_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTaskByIDRequest.ProtoReflect.Descriptor instead.
func (*GetTaskByIDRequest) Descriptor() ([]byte, []int) {
	return file_mikebway_fulfillment_fulfillment_api_proto_rawDescGZIP(), []int{0}
}

func (x *GetTaskByIDRequest) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

// Response parameters for the GetTaskByID API
type GetTaskByIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The Task requested
	Task *Task `protobuf:"bytes,1,opt,name=task,proto3" json:"task,omitempty"`
}

func (x *GetTaskByIDResponse) Reset() {
	*x = GetTaskByIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mikebway_fulfillment_fulfillment_api_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTaskByIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTaskByIDResponse) ProtoMessage() {}

func (x *GetTaskByIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mikebway_fulfillment_fulfillment_api_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTaskByIDResponse.ProtoReflect.Descriptor instead.
func (*GetTaskByIDResponse) Descriptor() ([]byte, []int) {
	return file_mikebway_fulfillment_fulfillment_api_proto_rawDescGZIP(), []int{1}
}

func (x *GetTaskByIDResponse) GetTask() *Task {
	if x != nil {
		return x.Task
	}
	return nil
}

// Request parameters for the GetTasks API
//
// See https://cloud.google.com/apis/design/design_patterns
type GetTasksRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// REQUIRED. The earliest Task submission time for which Tasks are to be returned.
	// Submission times may be equal to or greater than this.
	StartTime *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	// REQUIRED. The Task submission time after which Tasks are not to be returned
	// Submission times must be less than this.
	EndTime *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	// REQUIRED. The maximum number of result to be returned in a single response.
	//
	// Must be between 1 and 100.
	PageSize int32 `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// OPTIONAL. Required for second and subsequent requests, a marker token used to identify where the
	// next page of results should begin within the overall result set.
	//
	// All other parameters should be the same as in previous requests otherwise the results shall
	// be no deterministic.
	PageToken string `protobuf:"bytes,4,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	// OPTIONAL. The ID of the order which the tasks are associated with
	OrderId string `protobuf:"bytes,5,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	// OPTIONAL. The order item ID  which the tasks are associated with.
	//
	// NOTE: Specifying both an order_item_id and order_id is is pointless and will lead to an empty
	// result set if the item was not part of the order in question.
	OrderItemId string `protobuf:"bytes,6,opt,name=order_item_id,json=orderItemId,proto3" json:"order_item_id,omitempty"`
	// OPTIONAL. The product code which the tasks are associated with.
	ProductCode string `protobuf:"bytes,7,opt,name=product_code,json=productCode,proto3" json:"product_code,omitempty"`
}

func (x *GetTasksRequest) Reset() {
	*x = GetTasksRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mikebway_fulfillment_fulfillment_api_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTasksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTasksRequest) ProtoMessage() {}

func (x *GetTasksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mikebway_fulfillment_fulfillment_api_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTasksRequest.ProtoReflect.Descriptor instead.
func (*GetTasksRequest) Descriptor() ([]byte, []int) {
	return file_mikebway_fulfillment_fulfillment_api_proto_rawDescGZIP(), []int{2}
}

func (x *GetTasksRequest) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *GetTasksRequest) GetEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

func (x *GetTasksRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *GetTasksRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

func (x *GetTasksRequest) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *GetTasksRequest) GetOrderItemId() string {
	if x != nil {
		return x.OrderItemId
	}
	return ""
}

func (x *GetTasksRequest) GetProductCode() string {
	if x != nil {
		return x.ProductCode
	}
	return ""
}

// Response parameters for the GetTasks API.
type GetTasksResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// OPTIONAL. May not be present if the result set was empty.
	//
	// The list of Tasks in the current page of results.
	Tasks []*Task `protobuf:"bytes,1,rep,name=tasks,proto3" json:"tasks,omitempty"`
	// OPTIONAL. May not be present if the result set was empty
	//
	// The token to be included to request the next page of results.
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
}

func (x *GetTasksResponse) Reset() {
	*x = GetTasksResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mikebway_fulfillment_fulfillment_api_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTasksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTasksResponse) ProtoMessage() {}

func (x *GetTasksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mikebway_fulfillment_fulfillment_api_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTasksResponse.ProtoReflect.Descriptor instead.
func (*GetTasksResponse) Descriptor() ([]byte, []int) {
	return file_mikebway_fulfillment_fulfillment_api_proto_rawDescGZIP(), []int{3}
}

func (x *GetTasksResponse) GetTasks() []*Task {
	if x != nil {
		return x.Tasks
	}
	return nil
}

func (x *GetTasksResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

// Request parameters for the UpdateTaskStatus API.
type UpdateTaskStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// REQUIRED. The UUID ID of the task whose status is to be updated.
	TaskId string `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	// REQUIRED. The new status to be assigned to the task.
	Status TaskStatus `protobuf:"varint,2,opt,name=status,proto3,enum=mikebway.fulfillment.TaskStatus" json:"status,omitempty"`
	// OPTIONAL. A code that gives an indication of the reason for the status change. This might typically be
	// a message lookup key to a localized explanation for why the status has been changed. For example,
	// "more_data_needed" or "charge_denied" might be reasons that the status were changed to WAITING_CUSTOMER.
	ReasonCode string `protobuf:"bytes,3,opt,name=reason_code,json=reasonCode,proto3" json:"reason_code,omitempty"`
}

func (x *UpdateTaskStatusRequest) Reset() {
	*x = UpdateTaskStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mikebway_fulfillment_fulfillment_api_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTaskStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTaskStatusRequest) ProtoMessage() {}

func (x *UpdateTaskStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mikebway_fulfillment_fulfillment_api_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTaskStatusRequest.ProtoReflect.Descriptor instead.
func (*UpdateTaskStatusRequest) Descriptor() ([]byte, []int) {
	return file_mikebway_fulfillment_fulfillment_api_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateTaskStatusRequest) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *UpdateTaskStatusRequest) GetStatus() TaskStatus {
	if x != nil {
		return x.Status
	}
	return TaskStatus_UNDEFINED
}

func (x *UpdateTaskStatusRequest) GetReasonCode() string {
	if x != nil {
		return x.ReasonCode
	}
	return ""
}

// Response parameters for the UpdateTaskStatus API.
type UpdateTaskStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateTaskStatusResponse) Reset() {
	*x = UpdateTaskStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mikebway_fulfillment_fulfillment_api_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTaskStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTaskStatusResponse) ProtoMessage() {}

func (x *UpdateTaskStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mikebway_fulfillment_fulfillment_api_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTaskStatusResponse.ProtoReflect.Descriptor instead.
func (*UpdateTaskStatusResponse) Descriptor() ([]byte, []int) {
	return file_mikebway_fulfillment_fulfillment_api_proto_rawDescGZIP(), []int{5}
}

var File_mikebway_fulfillment_fulfillment_api_proto protoreflect.FileDescriptor

var file_mikebway_fulfillment_fulfillment_api_proto_rawDesc = []byte{
	0x0a, 0x2a, 0x6d, 0x69, 0x6b, 0x65, 0x62, 0x77, 0x61, 0x79, 0x2f, 0x66, 0x75, 0x6c, 0x66, 0x69,
	0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x66, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6c, 0x6d, 0x65,
	0x6e, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x14, 0x6d, 0x69,
	0x6b, 0x65, 0x62, 0x77, 0x61, 0x79, 0x2e, 0x66, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6c, 0x6d, 0x65,
	0x6e, 0x74, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x2f,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1f, 0x6d, 0x69, 0x6b, 0x65, 0x62, 0x77, 0x61, 0x79, 0x2f, 0x66, 0x75, 0x6c, 0x66, 0x69, 0x6c,
	0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x74, 0x61, 0x73, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x2d, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x42, 0x79, 0x49, 0x44, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x22,
	0x45, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x04, 0x74, 0x61, 0x73, 0x6b, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6d, 0x69, 0x6b, 0x65, 0x62, 0x77, 0x61, 0x79, 0x2e,
	0x66, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x54, 0x61, 0x73, 0x6b,
	0x52, 0x04, 0x74, 0x61, 0x73, 0x6b, 0x22, 0xa1, 0x02, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x54, 0x61,
	0x73, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x35, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09,
	0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x67,
	0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70,
	0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0d, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x65,
	0x6d, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x6c, 0x0a, 0x10, 0x47, 0x65,
	0x74, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30,
	0x0a, 0x05, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x6d, 0x69, 0x6b, 0x65, 0x62, 0x77, 0x61, 0x79, 0x2e, 0x66, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6c,
	0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x05, 0x74, 0x61, 0x73, 0x6b, 0x73,
	0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x50,
	0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x8d, 0x01, 0x0a, 0x17, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x12, 0x38, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e,
	0x6d, 0x69, 0x6b, 0x65, 0x62, 0x77, 0x61, 0x79, 0x2e, 0x66, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6c,
	0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x1a, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x32, 0xc8, 0x02, 0x0a, 0x0e, 0x46, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6c,
	0x6d, 0x65, 0x6e, 0x74, 0x41, 0x50, 0x49, 0x12, 0x64, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x54, 0x61,
	0x73, 0x6b, 0x42, 0x79, 0x49, 0x44, 0x12, 0x28, 0x2e, 0x6d, 0x69, 0x6b, 0x65, 0x62, 0x77, 0x61,
	0x79, 0x2e, 0x66, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x47, 0x65,
	0x74, 0x54, 0x61, 0x73, 0x6b, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x29, 0x2e, 0x6d, 0x69, 0x6b, 0x65, 0x62, 0x77, 0x61, 0x79, 0x2e, 0x66, 0x75, 0x6c, 0x66,
	0x69, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x42,
	0x79, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5b, 0x0a,
	0x08, 0x47, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x12, 0x25, 0x2e, 0x6d, 0x69, 0x6b, 0x65,
	0x62, 0x77, 0x61, 0x79, 0x2e, 0x66, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74,
	0x2e, 0x47, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x26, 0x2e, 0x6d, 0x69, 0x6b, 0x65, 0x62, 0x77, 0x61, 0x79, 0x2e, 0x66, 0x75, 0x6c, 0x66,
	0x69, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x73, 0x0a, 0x10, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2d,
	0x2e, 0x6d, 0x69, 0x6b, 0x65, 0x62, 0x77, 0x61, 0x79, 0x2e, 0x66, 0x75, 0x6c, 0x66, 0x69, 0x6c,
	0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e,
	0x6d, 0x69, 0x6b, 0x65, 0x62, 0x77, 0x61, 0x79, 0x2e, 0x66, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6c,
	0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42,
	0x32, 0x5a, 0x30, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x69,
	0x6b, 0x65, 0x62, 0x77, 0x61, 0x79, 0x2f, 0x70, 0x6f, 0x63, 0x2d, 0x67, 0x63, 0x70, 0x2d, 0x65,
	0x63, 0x6f, 0x6d, 0x6d, 0x2f, 0x70, 0x62, 0x2f, 0x66, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6c, 0x6d,
	0x65, 0x6e, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_mikebway_fulfillment_fulfillment_api_proto_rawDescOnce sync.Once
	file_mikebway_fulfillment_fulfillment_api_proto_rawDescData = file_mikebway_fulfillment_fulfillment_api_proto_rawDesc
)

func file_mikebway_fulfillment_fulfillment_api_proto_rawDescGZIP() []byte {
	file_mikebway_fulfillment_fulfillment_api_proto_rawDescOnce.Do(func() {
		file_mikebway_fulfillment_fulfillment_api_proto_rawDescData = protoimpl.X.CompressGZIP(file_mikebway_fulfillment_fulfillment_api_proto_rawDescData)
	})
	return file_mikebway_fulfillment_fulfillment_api_proto_rawDescData
}

var file_mikebway_fulfillment_fulfillment_api_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_mikebway_fulfillment_fulfillment_api_proto_goTypes = []interface{}{
	(*GetTaskByIDRequest)(nil),       // 0: mikebway.fulfillment.GetTaskByIDRequest
	(*GetTaskByIDResponse)(nil),      // 1: mikebway.fulfillment.GetTaskByIDResponse
	(*GetTasksRequest)(nil),          // 2: mikebway.fulfillment.GetTasksRequest
	(*GetTasksResponse)(nil),         // 3: mikebway.fulfillment.GetTasksResponse
	(*UpdateTaskStatusRequest)(nil),  // 4: mikebway.fulfillment.UpdateTaskStatusRequest
	(*UpdateTaskStatusResponse)(nil), // 5: mikebway.fulfillment.UpdateTaskStatusResponse
	(*Task)(nil),                     // 6: mikebway.fulfillment.Task
	(*timestamppb.Timestamp)(nil),    // 7: google.protobuf.Timestamp
	(TaskStatus)(0),                  // 8: mikebway.fulfillment.TaskStatus
}
var file_mikebway_fulfillment_fulfillment_api_proto_depIdxs = []int32{
	6, // 0: mikebway.fulfillment.GetTaskByIDResponse.task:type_name -> mikebway.fulfillment.Task
	7, // 1: mikebway.fulfillment.GetTasksRequest.start_time:type_name -> google.protobuf.Timestamp
	7, // 2: mikebway.fulfillment.GetTasksRequest.end_time:type_name -> google.protobuf.Timestamp
	6, // 3: mikebway.fulfillment.GetTasksResponse.tasks:type_name -> mikebway.fulfillment.Task
	8, // 4: mikebway.fulfillment.UpdateTaskStatusRequest.status:type_name -> mikebway.fulfillment.TaskStatus
	0, // 5: mikebway.fulfillment.FulfillmentAPI.GetTaskByID:input_type -> mikebway.fulfillment.GetTaskByIDRequest
	2, // 6: mikebway.fulfillment.FulfillmentAPI.GetTasks:input_type -> mikebway.fulfillment.GetTasksRequest
	4, // 7: mikebway.fulfillment.FulfillmentAPI.UpdateTaskStatus:input_type -> mikebway.fulfillment.UpdateTaskStatusRequest
	1, // 8: mikebway.fulfillment.FulfillmentAPI.GetTaskByID:output_type -> mikebway.fulfillment.GetTaskByIDResponse
	3, // 9: mikebway.fulfillment.FulfillmentAPI.GetTasks:output_type -> mikebway.fulfillment.GetTasksResponse
	5, // 10: mikebway.fulfillment.FulfillmentAPI.UpdateTaskStatus:output_type -> mikebway.fulfillment.UpdateTaskStatusResponse
	8, // [8:11] is the sub-list for method output_type
	5, // [5:8] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_mikebway_fulfillment_fulfillment_api_proto_init() }
func file_mikebway_fulfillment_fulfillment_api_proto_init() {
	if File_mikebway_fulfillment_fulfillment_api_proto != nil {
		return
	}
	file_mikebway_fulfillment_task_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_mikebway_fulfillment_fulfillment_api_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTaskByIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mikebway_fulfillment_fulfillment_api_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTaskByIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mikebway_fulfillment_fulfillment_api_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTasksRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mikebway_fulfillment_fulfillment_api_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTasksResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mikebway_fulfillment_fulfillment_api_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTaskStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mikebway_fulfillment_fulfillment_api_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTaskStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_mikebway_fulfillment_fulfillment_api_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_mikebway_fulfillment_fulfillment_api_proto_goTypes,
		DependencyIndexes: file_mikebway_fulfillment_fulfillment_api_proto_depIdxs,
		MessageInfos:      file_mikebway_fulfillment_fulfillment_api_proto_msgTypes,
	}.Build()
	File_mikebway_fulfillment_fulfillment_api_proto = out.File
	file_mikebway_fulfillment_fulfillment_api_proto_rawDesc = nil
	file_mikebway_fulfillment_fulfillment_api_proto_goTypes = nil
	file_mikebway_fulfillment_fulfillment_api_proto_depIdxs = nil
}
