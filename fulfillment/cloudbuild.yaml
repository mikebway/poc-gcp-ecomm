steps:
# Copy the GitHub repository deploy SSH key from the secrets manager so that
# the build will be able to retrieve sibling modules from our private repo.
# Also, copy the GitHub domain name as a known host for SSH.
- name: 'gcr.io/cloud-builders/git'
  secretEnv: ['SSH_KEY']
  entrypoint: 'bash'
  args:
    - -c
    - |
      echo "$$SSH_KEY" >> /root/.ssh/id_ed25519
      chmod 400 /root/.ssh/id_ed25519
      cp known_hosts.github /root/.ssh/known_hosts
      git config --global url."git@github.com:mikebway".insteadOf "https://github.com/mikebway"
  volumes:
    - name: 'ssh'
      path: /root/.ssh
    - name: 'git'
      path: /root/.gitconfig

# Build the service binary
- name: 'golang:1.19-buster'
  args: ['go', 'build', '-v', '-o', 'server']
  volumes:
    - name: 'ssh'
      path: /root/.ssh
    - name: 'git'
      path: /root/.gitconfig

# Build the docker image
- name: 'gcr.io/cloud-builders/docker'
  args: [
      'build',
      '-t', 'us-central1-docker.pkg.dev/$PROJECT_ID/gcr-artifacts/fulfillment-service',
      '-f', 'Dockerfile',
      '.']

# Push our generated image to teh container registry
images:
  - 'us-central1-docker.pkg.dev/$PROJECT_ID/gcr-artifacts/fulfillment-service'

# Fetch the SSH private key that allows "deploy" read access to sibling
# modules in our monorepo.
availableSecrets:
  secretManager:
    - versionName: projects/$PROJECT_ID/secrets/${PROJECT_ID}_deploy/versions/latest
      env: 'SSH_KEY'
