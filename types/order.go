// Package types defines generic type entity structures as they might be stored in a Google Datastore
// or represented in JSON
package types

import (
	"google.golang.org/genproto/googleapis/type/money"
)

const (
	// KeyPrefixOrder may be combined with an order's UUID ID to form the datastore key name for an order entity
	KeyPrefixOrder = "order:"

	// KeyPrefixOrderItem may be combined with an order item's UUID ID to form the datastore key name for an order item entity
	KeyPrefixOrderItem = "orderitem:"
)

// Order is generated by the shopping cart service on checkout. Posted to the event bus by the cart service,
// it will trigger the payment and/or fulfillment phase.
type Order struct {
	// A UUID ID in hexadecimal string form - a unique ID for this order.
	Id string `firestore:"id" json:"id,omitempty"`

	// SubmissionTime is the time at which cart checkout was completed and the order was submitted for payment
	SubmissionTime Timestamp `firestore:"submissionTime" json:"submissionTime"`

	// Status describes the overall status of the order, summarizing or
	// overriding the status of the individual order items.
	Status OrderStatus `firestore:"status" json:"status"`

	// OrderedBy identifies the person who submitted the order
	OrderedBy *Person `firestore:"orderedBy" json:"orderedBy"`

	// DeliveryAddress is the postal address to which any physical items in the order
	// are to be delivered.
	//
	// NOTE: delivery address is stored as a separate entity in the Google Datastore with
	// the order key as their key ancestor.
	DeliveryAddress *PostalAddress `firestore:"-" json:"deliveryAddress"`

	// OrderItems is the list of one to many items that make up the order.
	//
	// NOTE: order items are stored as separate entities in the Google Datastore with
	// the order key as their key ancestor.
	OrderItems []*OrderItem `firestore:"-" json:"orderItems"`
}

// OrderStatus is an enumeration type defining the overall status of an order
type OrderStatus int

const (
	OsUnspecified        OrderStatus = 0
	OsPending            OrderStatus = 1
	OsCompleted          OrderStatus = 2
	OsCancelled          OrderStatus = 3
	OsPartiallyCancelled OrderStatus = 4
)

// OrderItem represents a single entry in an order. An order will contain one
// to many order items.
type OrderItem struct {
	// Id is a UUID ID in hexadecimal string form - a unique ID for this order item.
	Id string `firestore:"id" json:"id,omitempty"`

	// OrderId UUID ID in hexadecimal string form - a unique ID for this item's parent order
	OrderId string `firestore:"orderId" json:"orderId,omitempty"`

	// ProductCode is the equivalent of a SKU code identifying the type of
	// product or service being ordered.
	ProductCode string `firestore:"productCode" json:"productCode"`

	// Quantity is the number of this item type that is being ordered.
	Quantity int32 `firestore:"quantity" json:"quantity"`

	// UnitPrice is the price that the customer was shown for a single item
	// when they selected the item for their cart
	UnitPrice money.Money `firestore:"unitPrice" json:"unitPrice"`

	// The fulfillment state of the oder item as an enumerated value
	Status OrderItemStatus `firestore:"status" json:"status"`
}

// OrderItemStatus is an enumeration type defining the status of a single order item
type OrderItemStatus int

const (
	OisUnspecified   OrderItemStatus = 0
	OisPending       OrderItemStatus = 1
	OisCompleted     OrderItemStatus = 2
	OisRefundPending OrderItemStatus = 3
	OisRefunded      OrderItemStatus = 4
)
