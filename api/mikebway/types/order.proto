syntax = "proto3";

package mikebway.types;

import "google/type/money.proto";
import "google/type/timestamp.proto";
import "mikebway/types/address.proto";
import "mikebway/types/person.proto";

option go_package = "github.com/mikebway/poc-gcp-ecomm/pb/types";

// An order is generated by the shopping cart service on checkout. Posted to the event bus by the cart service,
// it will trigger the payment phase.
message Order {
  // A UUID ID in hexadecimal string form - a unique ID for this order.
  // This will be set by the cart when the order is submitted.
  string id = 1;

  // The time at which cart checkout was completed and the order was submitted for payment
  google.protobuf.Timestamp submission_time = 2;

  // OrderStatus describes the overall status of the order, summarizing or
  // overriding the status of the individual order items.
  OrderStatus order_status = 3;

  // The person who submitted the order
  Person ordered_by = 4;

  // The delivery address for the order
  PostalAddress delivery_address = 5;

  // Order items is the list of one to many items that make up the order
  repeated OrderItem order_items = 6;
}

// An enumeration of order item states
enum OrderStatus {
  OS_UNSPECIFIED = 0;
  OS_PENDING = 1;
  OS_COMPLETED = 2;
  OS_CANCELED = 3;
  OS_PARTIALLY_CANCELLED = 4;
}

// OrderItem represents a single entry in an order. An order will contain one
// to many order items.
message OrderItem {
  // A UUID ID in hexadecimal string form - a unique ID for this item.
  // This will be set by the cart when the item is added to the shopper's cart
  string id = 1;

  // Product code is the equivalent of a SKU code identifying the type of
  // product or service being ordered.
  string product_code = 2;

  // Quantity is the number of this item type that is being ordered.
  int32 quantity = 3;

  // The unit price is the price that the customer was shown for a single item
  // when they selected the item for their cart
  google.type.Money unit_price = 4;

  // The fulfillment state of the oder item as an enumerated value
  OrderItemStatus status = 5;
}

// An enumeration of order item states
enum OrderItemStatus {
  OIS_UNSPECIFIED = 0;
  OIS_PENDING = 1;
  OIS_COMPLETED = 2;
  OIS_REFUND_PENDING = 3;
  OIS_REFUNDED = 4;
}

